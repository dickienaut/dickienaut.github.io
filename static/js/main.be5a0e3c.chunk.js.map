{"version":3,"sources":["images/test.jpg","images/photos/one.jpg","images/photos/two.jpg","images/photos/three.jpg","images/photos/four.jpg","images/photos/five.jpg","images/photos/six.jpg","images/photos/seven.jpg","images/photos/eight.jpg","pages/home/home.jsx","pages/about/about.jsx","components/gallery-item/gallery-item.jsx","images/photos.js","images/photos/index.js","pages/gallery/gallery.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","to","style","textDecoration","src","image","alt","About","useState","GalleryItem","url","photos","require","width","height","MyGallery","e","setCurrentImage","setViewerIsOpen","useCallback","event","photo","index","direction","onClick","target","App","basename","className","exact","path","component","Gallery","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,kC,iGCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,2HCqB5BC,G,MAhBF,WACX,OACE,6BACE,2CACA,4BACE,4BAAI,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAO,CAAEC,eAAgB,SAAtC,SACJ,4BAAI,kBAAC,IAAD,CAAMF,GAAG,SAASC,MAAO,CAAEC,eAAgB,SAA3C,UACJ,4BAAI,kBAAC,IAAD,CAAMF,GAAG,WAAWC,MAAO,CAAEC,eAAgB,SAA7C,aAEN,yBAAKC,IAAKC,IAAOC,IAAI,YACrB,4EACA,gE,OCASC,EAdD,WAAO,IAAD,EAEUC,mBAAS,IAFnB,6BAMlB,OACE,6BACE,uC,QCASC,EARK,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACrB,OACE,6BACE,yBAAKN,IAAKM,MCLHC,GCADC,EAAQ,IACRA,EAAQ,IACNA,EAAQ,IACTA,EAAQ,IACRA,EAAQ,IACTA,EAAQ,IACNA,EAAQ,IACRA,EAAQ,IDPA,CACpB,CACER,IAAK,+CACLS,MAAO,EACPC,OAAQ,GAEV,CACEV,IAAK,+CACLS,MAAO,EACPC,OAAQ,GAEV,CACEV,IAAK,iDACLS,MAAO,EACPC,OAAQ,GAEV,CACEV,IAAK,gDACLS,MAAO,EACPC,OAAQ,GAEV,CACEV,IAAK,gDACLS,MAAO,EACPC,OAAQ,GAEV,CACEV,IAAK,+CACLS,MAAO,EACPC,OAAQ,GAEV,CACEV,IAAK,iDACLS,MAAO,EACPC,OAAQ,GAEV,CACEV,IAAK,iDACLS,MAAO,EACPC,OAAQ,KENGC,EA1BG,WAAO,IAgBnBC,EAhBkB,EAEkBR,mBAAS,GAF3B,mBAEDS,GAFC,aAGkBT,oBAAS,GAH3B,mBAGDU,GAHC,WAMDC,uBAAY,SAACC,EAAD,GAA6B,EAAnBC,MAAoB,IAAbC,EAAY,EAAZA,MAC9CL,EAAgBK,GAChBJ,GAAgB,KACf,IAQL,OACE,6BACE,uCACA,kBAAC,IAAD,CAASP,OAAQA,EAAQY,UAAW,MAAOC,QAAS,SAACJ,GAAD,OAAWJ,EAAII,EAAMK,OAAOrB,OAChF,kBAAC,EAAD,CAAaM,IAAKM,M,aCFTU,MAZf,WACE,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,yBAAKC,UAAU,OACb,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IACjC,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,SAASC,UAAWxB,IACtC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,WAAWC,UAAWC,OCR5BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.be5a0e3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.ddcd7dab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/one.eb9499e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/two.717417b2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/three.3b7a4f16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/four.87b80bbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/five.3a7d3476.jpg\";","module.exports = __webpack_public_path__ + \"static/media/six.d92026e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/seven.291b1752.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eight.e14a6cc6.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport image from '../../images/test.jpg'\nimport './home.css'\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Hello World</h1>\n      <ul>\n        <li><Link to='/' style={{ textDecoration: 'none' }}>Home</Link></li>\n        <li><Link to='/about' style={{ textDecoration: 'none' }}>About</Link></li>\n        <li><Link to='/gallery' style={{ textDecoration: 'none' }}>Gallery</Link></li>\n      </ul>\n      <img src={image} alt='profile'/>\n      <p>My name is Lyle and I build things on the web</p>\n      <p>This site was built with React</p>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\n\nconst About = () => {\n\n  const [photos, setPhotos] = useState([])\n\n\n\n  return (\n    <div>\n      <h1>About</h1>\n\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\n\nconst GalleryItem = ({ url }) => {\n  return (\n    <div>\n      <img src={url}></img>\n    </div>\n  );\n}\n\nexport default GalleryItem;\n","export const photos = [\n  {\n    src: \"https://lylewebsite.s3.amazonaws.com/one.jpg\",\n    width: 4,\n    height: 3\n  },\n  {\n    src: \"https://lylewebsite.s3.amazonaws.com/two.jpg\",\n    width: 1,\n    height: 1\n  },\n  {\n    src: \"https://lylewebsite.s3.amazonaws.com/three.jpg\",\n    width: 3,\n    height: 4\n  },\n  {\n    src: \"https://lylewebsite.s3.amazonaws.com/four.jpg\",\n    width: 3,\n    height: 4\n  },\n  {\n    src: \"https://lylewebsite.s3.amazonaws.com/five.jpg\",\n    width: 3,\n    height: 4\n  },\n  {\n    src: \"https://lylewebsite.s3.amazonaws.com/six.jpg\",\n    width: 4,\n    height: 3\n  },\n  {\n    src: \"https://lylewebsite.s3.amazonaws.com/seven.jpg\",\n    width: 3,\n    height: 4\n  },\n  {\n    src: \"https://lylewebsite.s3.amazonaws.com/eight.jpg\",\n    width: 4,\n    height: 3\n  },\n];\n","const one = require('./one.jpg');\nconst two = require('./two.jpg');\nconst three = require('./three.jpg');\nconst four = require('./four.jpg');\nconst five = require('./five.jpg');\nconst six = require('./six.jpg');\nconst seven = require('./seven.jpg');\nconst eight = require('./eight.jpg');\n\nexport const displayPhotos = [\n  one,\n  two,\n  three,\n  four,\n  five,\n  six,\n  seven,\n  eight\n]\n","import React, { useState, useCallback } from 'react';\nimport Gallery from \"react-photo-gallery\";\nimport GalleryItem from '../../components/gallery-item/gallery-item.jsx'\n\nimport { displayPhotos } from '../../images/photos/index.js'\nimport { photos } from '../../images/photos.js'\n\nconst MyGallery = () => {\n\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n\n\n  const openLightbox = useCallback((event, { photo, index }) => {\n      setCurrentImage(index);\n      setViewerIsOpen(true);\n    }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  let e\n  return (\n    <div>\n      <h1>Gallery</h1>\n      <Gallery photos={photos} direction={'row'} onClick={(event) => e = event.target.src}/>\n      <GalleryItem url={e} />\n    </div>\n  );\n}\n\nexport default MyGallery;\n","import React from 'react';\nimport Home from './pages/home/home.jsx'\nimport About from './pages/about/about.jsx'\nimport Gallery from './pages/gallery/gallery.jsx'\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport './App.css';\n\n// const images = [\n//   'https://ibb.co/F0fkQBD',\n//   'https://ibb.co/59Sgrp6',\n//   'https://ibb.co/Czjqrk3',\n//   'https://ibb.co/qj7LMkz'\n// ]\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <div className=\"App\">\n        <Route exact path='/' component={Home}/>\n        <Route exact path='/about' component={About}/>\n        <Route exact path='/gallery' component={Gallery}/>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}